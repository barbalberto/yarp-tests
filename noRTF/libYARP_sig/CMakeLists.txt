# Generated by "yarp cmake"

# A cmake file to get started with for new YARP projects.
# It assumes you want to build an executable from source code in 
# the current directory.
# Replace "yarpy" with whatever your executable should be called.

cmake_minimum_required(VERSION 3.5)
project(PC_YARP_test)

# Find YARP.  Point the YARP_DIR environment variable at your build.
find_package(YARP REQUIRED)
# Search for source code.
file(GLOB folder_source *.cpp *.cc *.c)
file(GLOB folder_header *.h)

# Search for IDL files.
file(GLOB idl_files *.thrift *.msg *.srv)
foreach(idl ${idl_files})
  yarp_idl_to_dir(${idl} ${CMAKE_BINARY_DIR}/idl IDL_SRC IDL_HDR IDL_INCLUDE)
  set(folder_source ${folder_source} ${IDL_SRC})
  set(folder_header ${folder_header} ${IDL_HDR})
  include_directories(${IDL_INCLUDE})
endforeach()

# Automatically add include directories if needed.
foreach(header_file ${folder_header})
  get_filename_component(p ${header_file} PATH)
  include_directories(${p})
endforeach(header_file ${folder_header})

include_directories(${PCL_INCLUDE_DIRS} )
link_directories(${PCL_LIBRARY_DIRS} )

# Fix some PCL bug related to Ubuntu
list(REMOVE_ITEM PCL_LIBRARIES "vtkproj4")

# Set up executables.
add_executable(PCLYARPTest PCLYARPTest.cpp)
add_executable(PCDYARPTest PCDYARPTest.cpp)
target_link_libraries(PCLYARPTest ${YARP_LIBRARIES} ${PCL_LIBRARIES} YARP::YARP_pcl)
target_link_libraries(PCDYARPTest ${YARP_LIBRARIES} ${PCL_LIBRARIES} YARP::YARP_pcl)

